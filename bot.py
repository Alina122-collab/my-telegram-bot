from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# üîë –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
TOKEN = "8320766423:AAEzbC6nfEM_GvniBvO_6-kLhf-z6jkSFzE"

# üìå /start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üì© –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å", callback_data="offer")],
        [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç üëã\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=reply_markup
    )

# üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # üì© –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å
    if query.data == "offer":
        await query.edit_message_text(
            text="–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ? ‚úâÔ∏è\n–ù–∞–ø–∏—à–∏ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É: info@napalabs.ru"
        )

    # ‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä–æ–µ –º–µ–Ω—é
    elif query.data == "ask_question":
        keyboard = [
            [InlineKeyboardButton("Equila DPI", callback_data="equila")],
            [InlineKeyboardButton("OTIUM ACS", callback_data="otium")],
            [InlineKeyboardButton("Inframirror", callback_data="infra")],
            [InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É", callback_data="specialist")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(
            text="–í—ã–±–µ—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å üëá",
            reply_markup=reply_markup
        )

    # Equila DPI
    elif query.data == "equila":
        text = (
            "üåê *Equila DPI* ‚Äî —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ –±–∞–∑–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ DPI.\n\n"
            "üìå *–°—Ñ–µ—Ä–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è*: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º.\n\n"
            "‚úÖ *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n"
            "- –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç–∞–º —Å –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º\n"
            "- –ì–∏–±–∫–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã\n"
            "- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞\n\n"
            "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: [napalabs.ru/equila_dpi](https://napalabs.ru/equila_dpi)"
        )
        await query.edit_message_text(text=text, parse_mode="Markdown")

    # OTIUM ACS
    elif query.data == "otium":
        text = (
            "üñ• *OTIUM ACS* ‚Äî —Å–µ—Ä–≤–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º.\n\n"
            "üìå –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: –±–∏–∑–Ω–µ—Å, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ IT, –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å–≤—è–∑–∏.\n\n"
            "‚úÖ *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n"
            "- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞—Ç—Ä–∞—Ç\n"
            "- –†–æ—Å—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
            "- –õ—É—á—à–∏–π –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –æ–ø—ã—Ç\n\n"
            "üî∏ [–î–µ–º–æ-–¥–æ—Å—Ç—É–ø](https://otiumacs-demo.napalabs.ru/auth/login?next=/)\n"
            "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: [napalabs.ru/otium_acs](https://napalabs.ru/otium_acs)"
        )
        await query.edit_message_text(text=text, parse_mode="Markdown")

    # InfraMirror
    elif query.data == "infra":
        text = (
            "üèó *InfraMirror* ‚Äî —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É—á—ë—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã.\n\n"
            "üìå *–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è*: —Ä–µ—Å—É—Ä—Å–æ- –∏ —Ç–µ–ª–µ–∫–æ–º-–∫–æ–º–ø–∞–Ω–∏–∏.\n\n"
            "‚úÖ *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n"
            "- –≠–∫–æ–Ω–æ–º–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤\n"
            "- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
            "- –ü–æ–≤—ã—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n\n"
            "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: [napalabs.ru/inframirror](https://napalabs.ru/inframirror)"
        )
        await query.edit_message_text(text=text, parse_mode="Markdown")

    # –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
    elif query.data == "specialist":
        await query.edit_message_text(
            text="–•–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É? üì©\n–ù–∞–ø–∏—à–∏ üëâ @sevarafoto"
        )

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    app.run_polling()

if __name__ == "__main__":
    main()